from test import *


all = [
    Test("samesuite/apu/channel_1/channel_1_align.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_align_cpu.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_duty.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_duty_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_1/channel_1_extra_length_clocking-cgb0B.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_freq_change.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_1/channel_1_freq_change_timing-A.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_1/channel_1_freq_change_timing-cgb0BC.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_1/channel_1_freq_change_timing-cgbDE.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_nrx2_glitch.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_nrx2_speed_change.gb", runtime=3.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_restart.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_restart_nrx2_glitch.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_stop_div.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_stop_restart.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_sweep.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_sweep_restart.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_sweep_restart_2.gb", runtime=1.5, model=CGB),
    Test("samesuite/apu/channel_1/channel_1_volume.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_1/channel_1_volume_div.gb", runtime=2.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_align.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_align_cpu.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_duty.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_duty_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_2/channel_2_extra_length_clocking-cgb0B.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_freq_change.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_nrx2_glitch.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_nrx2_speed_change.gb", runtime=3.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_restart.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_restart_nrx2_glitch.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_stop_div.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_stop_restart.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_volume.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_2/channel_2_volume_div.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_and_glitch.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_3/channel_3_extra_length_clocking-cgb0.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_3/channel_3_extra_length_clocking-cgbB.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_first_sample.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_freq_change_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_restart_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_restart_during_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_restart_stop_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_shift_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_shift_skip_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_stop_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_stop_div.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_3/channel_3_wave_ram_locked_write.gb", runtime=1.5, model=CGB),
    Test("samesuite/apu/channel_3/channel_3_wave_ram_sync.gb", runtime=1.5, model=CGB),
    Test("samesuite/apu/channel_4/channel_4_align.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_delay.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_equivalent_frequencies.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    # Test("samesuite/apu/channel_4/channel_4_extra_length_clocking-cgb0B.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_frequency_alignment.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_freq_change.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_lfsr.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_lfsr15.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_lfsr_15_7.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_lfsr_7_15.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_lfsr_restart.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_lfsr_restart_fast.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/channel_4/channel_4_volume_div.gb", runtime=2.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/div_trigger_volume_10.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/div_write_trigger.gb", runtime=1.5, model=CGB),
    Test("samesuite/apu/div_write_trigger_10.gb", runtime=1.5, model=CGB),
    Test("samesuite/apu/div_write_trigger_volume.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/apu/div_write_trigger_volume_10.gb", runtime=1.5, model=CGB, required_features=(PCM,)),
    Test("samesuite/dma/gbc_dma_cont.gb", runtime=1.5, model=CGB),
    Test("samesuite/dma/gdma_addr_mask.gb", runtime=1.5, model=CGB),
    Test("samesuite/dma/hdma_lcd_off.gb", runtime=1.5, model=CGB),
    Test("samesuite/dma/hdma_mode0.gb", runtime=1.5, model=CGB),
    Test("samesuite/ppu/blocking_bgpi_increase.gb", runtime=1.5, model=CGB),
    Test("samesuite/sgb/command_mlt_req.gb", runtime=1.5, model=SGB),
    Test("samesuite/sgb/command_mlt_req_1_incrementing.gb", runtime=1.5, model=SGB),
]
